name: CodeQL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
          - language: python
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Analyze
        uses: github/codeql-action/analyze@v3
name: üõçÔ∏è Sync Shopify Products (Daily at 16h)

on:
  schedule:
    - cron: '0 14 * * *' # 14h UTC = 16h Paris
  workflow_dispatch: # Permet lancement manuel si besoin

jobs:
  sync:
    runs-on: ubuntu-latest

  

      - name: üì£ Notify Slack on success
        if: success()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ Blackbird sync termin√© avec succ√®s √† 16h00."}'

      - name: üö® Notify Slack on failure
        if: failure()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚ùå √âchec Blackbird sync √† 16h00. V√©rifie le workflow GitHub."}'
name: üõçÔ∏è Sync Shopify Products & Images (Daily at 16h)

on:
  schedule:
    - cron: '0 14 * * *' # 14h UTC = 16h Paris
  workflow_dispatch:

jobs:
  products:
    name: ‚ú® Sync Products
    runs-on: ubuntu-latest
    env:
      SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_TOKEN: ${{ secrets.SHOPIFY_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: üß† Run product sync script
        run: node index.js
      - name: ‚úÖ Slack success (products)
        if: success()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ Produits Shopify mis √† jour avec succ√®s √† 16h00."}'
      - name: ‚ùå Slack fail (products)
        if: failure()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚ùå √âchec sync produits √† 16h00. V√©rifie GitHub Actions."}'

  images:
    name: üñºÔ∏è Optimize Image Alt Texts
    needs: products
    runs-on: ubuntu-latest
    env:
      SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_TOKEN: ${{ secrets.SHOPIFY_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: üß† Run image SEO script
        run: node alt-image-optimizer.js # Fichier que tu peux isoler si tu veux
      - name: ‚úÖ Slack success (images)
        if: success()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ Alt texts des images Shopify optimis√©s avec succ√®s √† 16h00."}'
      - name: ‚ùå Slack fail (images)
        if: failure()
        run: |
          curl -X POST $SLACK_WEBHOOK_URL \
          -H 'Content-type: application/json' \
          --data '{"text":"‚ùå √âchec optimisation Alt images √† 16h00. √Ä v√©rifier."}'

